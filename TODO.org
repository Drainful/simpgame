* last time on Adrian's Bizarre Adventure
- Need to make game object storage compatible with class redefinition of inheritance.
- I was working on refactoring for event system and AI. Should be easy
  from here to make a simple random walker AI
- then worry about enemy following player
- then worry about basic combat.
  
* goals
** Short term
- [X] finish basic map generation
- [ ] npc with basic AI
** Long term
- [ ] combat
- [ ] dungeon features (doors at least)
- [ ] items
- [ ] colors
- [ ] UI and message log
- [ ] debug commands (one to unblock repl for debugging)
** pie in the sky
- [ ] fun combat
- [ ] that rapid selection mechanism outlined in journal
- [ ] advanced ai (read those old articles on roguebasin)
- [ ] LOS algorithm + memory
  
* things to consider
- next project, use asdf and packages to organize your code and facilitate building.
- consider that "regions" (hash tables with equalp of vector2 key) may contain arbitrary information as "Values"
  - !! perhaps use this to store (references? to) those things which have location in the model or contained classes.
    - replace the boolean array with one of these, should be similar iteration speed, or at least same time complexity
